# This releases the app to the playstore to internal testing track
# 1. Builds the UI + Android app
# 2. Signs the APK and AAB files 
# 3. Increment the version code
# 4. Uploads the APK and AAB files to GitHub Artifacts
# 5. Uploads the APK and AAB files to Google Play Console

# Upload key generation
# - keytool -genkey -v -keystore upload-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias upload

name: Android App Build and Upload

on:
  push:
    branches:
      - feature/frontend-setup
    tags:
      - androidapp-v[0-9]+.[0-9]+.[0-9]+-rc*

# App name, this is only used for apk and aab filenames
env:
  APP_NAME: zerotorelease
  APP_FLAVOR: staging
  ANDROID_APP_PACKAGE_NAME: "com.zerotorelease.app.staging"

jobs:
  build-app:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency:
      group: staging-deploy
      cancel-in-progress: false

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-java@v4
      with:
        distribution: 'corretto' # See 'Supported distributions' for available options
        java-version: '17'

    - run: npm install -g pnpm

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Build Staging APK
      uses: ./.github/actions/android-build
      with:
        flavor: ${{ env.APP_FLAVOR }}

    - name: Upload APKs to GitHub Artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: ${{ env.APP_NAME }}-android-${{ env.APP_FLAVOR }}-all
        path: |
          ./frontend/todo/android/app/build/outputs/apk/${{ env.APP_FLAVOR }}/debug/*
          ./frontend/todo/android/app/build/outputs/apk/${{ env.APP_FLAVOR }}/release/*
          ./frontend/todo/android/app/build/outputs/bundle/${{ env.APP_FLAVOR }}/Debug/*
          ./frontend/todo/android/app/build/outputs/bundle/${{ env.APP_FLAVOR }}/Release/*
        retention-days: 10